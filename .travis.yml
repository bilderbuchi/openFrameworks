os:
  - linux
#  - osx
# language: objective-c
language: c++
compiler: gcc
# node_js: '0.10'
env:
  global:
    - secure: kjz286d6rs2VHpv4WnxAOYXcdTIaTaABZ0SNXf27r5H+NDu5qx8ZSeCmj/9op/sDjTtpkLKhi2a0njUCWwak28RAWP3dNkT92MkUPVKBkevznSxWeqwLHoUos3AJnhPMB+cwrWvmRC+Ljt5K1q8SxQsS/HXM9pzKL3DG3qxM+eo=
  matrix:
    - TARGET="linux" \
        SCRIPT="scripts/linux/testTemplate.sh"
    - TARGET="android-armv7" \
        SCRIPT="scripts/android/testTemplate.sh armv7"
    - TARGET="android-x86" \
        SCRIPT="scripts/android/testTemplate.sh x86"
    - TARGET="docs" \
        SCRIPT="scripts/dev/documentation.sh"
matrix:
  include:
    # fully specify builds, apparenly include can't dynamically expand matrix entries
    - os: osx
      compiler: clang
      env: TARGET="osx" \
          SCRIPT="scripts/$TARGET/testTemplate.sh"
    - os: osx
      compiler: clang
      env: TARGET="ios" \
          SCRIPT="scripts/$TARGET/testTemplate.sh"

before_install:
    - export OF_ROOT="$PWD"
    - echo "$OF_ROOT"
    - if [ "$TARGET" == "docs" ]; then scripts/dev/documentation.sh before_install; fi
    - if [ "$TARGET" == "linux" ]; then
        sudo scripts/linux/ubuntu/install_dependencies.sh;
        export CXX=g++-4.9;
      fi
install:
    if [ "$TARGET" == "android-armv7" ] || [ "$TARGET" == "android-x86" ]; then scripts/android/install_tests_env.sh; fi
script:
    - echo "$OF_ROOT"
    - "$SCRIPT"
after_success:
    if [ "$TARGET" == "docs" ]; then scripts/dev/documentation.sh after_success; fi
git:
    depth: 10
#notifications:
#    webhooks: http://192.237.185.151/web-hooks/travis_done.cgi
